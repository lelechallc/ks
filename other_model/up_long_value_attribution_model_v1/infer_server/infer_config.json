{
  "_CONFIG_VERSION": "3abaa6cab5ff91561b70e697d735ab77_local",
  "_DRAGONFLY_CREATE_TIME": "2024-11-25 10:30:41",
  "_DRAGONFLY_VERSION": "0.7.21",
  "attrs_from_request": {
    "common_attr": [
      "tab_id",
      "user_info_str"
    ],
    "item_attr": [
      "cascade_pctr",
      "cascade_pltr",
      "cascade_plvtr",
      "cascade_psvr",
      "emp_ctr",
      "emp_ftr",
      "emp_ltr",
      "emp_wtr",
      "pcpr",
      "pctr",
      "pftr",
      "photo_info_str",
      "pltr",
      "plvtr",
      "pptr",
      "psvr",
      "pvtr",
      "pwtr",
      "reason"
    ]
  },
  "default_request_type": "fr_up_longterm_attribution_model_v1",
  "kess_config": {
    "service_name": "grpc_FrLongtermAttributionV1Infer"
  },
  "pipeline_manager_config": {
    "base_pipeline": {
      "processor": {
        "arrange_by_sub_flow_BDF4D6": {
          "$metadata": {
            "$input_common_attrs": [
              "click_pid_list",
              "follow_pid_list",
              "like_pid_list",
              "tab_id",
              "user_info"
            ],
            "$input_item_attrs": [
              "author_category_type",
              "author_dnn_cluster_id",
              "author_healthiness",
              "author_upload_count",
              "author_user_good_count",
              "cascade_pctr",
              "cascade_pltr",
              "cascade_plvtr",
              "cascade_psvr",
              "context_info",
              "emp_ctr",
              "emp_ftr",
              "emp_ltr",
              "emp_wtr",
              "pctr",
              "pftr",
              "photo_info",
              "pltr",
              "plvtr",
              "pptr",
              "pvtr",
              "pwtr",
              "reason_string"
            ],
            "$modify_item_tables": [
              ""
            ],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "comment_value",
              "effective_play_value",
              "follow_value",
              "forward_value",
              "like_value",
              "long_play_value",
              "play_time_min",
              "profile_enter_value",
              "profile_stay_time_min"
            ]
          },
          "expected_partition_size": 256,
          "flow_name": "predict_sub_flow",
          "merge_item_attrs": [
            "comment_value",
            "effective_play_value",
            "follow_value",
            "forward_value",
            "like_value",
            "long_play_value",
            "play_time_min",
            "profile_enter_value",
            "profile_stay_time_min"
          ],
          "pass_common_attrs": [
            "click_pid_list",
            "follow_pid_list",
            "like_pid_list",
            "tab_id",
            "user_info"
          ],
          "pass_item_attrs": [
            "author_category_type",
            "author_dnn_cluster_id",
            "author_healthiness",
            "author_upload_count",
            "author_user_good_count",
            "cascade_pctr",
            "cascade_pltr",
            "cascade_plvtr",
            "cascade_psvr",
            "context_info",
            "emp_ctr",
            "emp_ftr",
            "emp_ltr",
            "emp_wtr",
            "pctr",
            "pftr",
            "photo_info",
            "pltr",
            "plvtr",
            "pptr",
            "pvtr",
            "pwtr",
            "reason_string"
          ],
          "type_name": "CommonRecoPipelineArranger"
        },
        "build_protobuf_247E20": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "cascade_pctr",
              "cascade_pltr",
              "cascade_plvtr",
              "cascade_psvr"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "context_info"
            ]
          },
          "class_name": "ks.reco.ContextInfo",
          "inputs": [
            {
              "item_attr": "cascade_pctr",
              "path": "cascade_pctr"
            },
            {
              "item_attr": "cascade_pltr",
              "path": "cascade_pltr"
            },
            {
              "item_attr": "cascade_psvr",
              "path": "cascade_psvr"
            },
            {
              "item_attr": "cascade_plvtr",
              "path": "cascade_plvtr"
            }
          ],
          "output_item_attr": "context_info",
          "type_name": "CommonRecoProtobufBuildAttrEnricher"
        },
        "calc_weighted_sum_C8753A": {
          "$metadata": {
            "$input_common_attrs": [
              "w_comment",
              "w_eplay",
              "w_follow",
              "w_forward",
              "w_like",
              "w_lplay",
              "w_p_staytime",
              "w_profile_enter",
              "w_time"
            ],
            "$input_item_attrs": [
              "comment_value",
              "effective_play_value",
              "follow_value",
              "forward_value",
              "like_value",
              "long_play_value",
              "play_time_min",
              "profile_enter_value",
              "profile_stay_time_min"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "longterm_up_attribution_score"
            ]
          },
          "channels": [
            {
              "name": "long_play_value",
              "weight": "{{w_lplay}}"
            },
            {
              "name": "effective_play_value",
              "weight": "{{w_eplay}}"
            },
            {
              "name": "play_time_min",
              "weight": "{{w_time}}"
            },
            {
              "name": "profile_stay_time_min",
              "weight": "{{w_p_staytime}}"
            },
            {
              "name": "like_value",
              "weight": "{{w_like}}"
            },
            {
              "name": "follow_value",
              "weight": "{{w_follow}}"
            },
            {
              "name": "forward_value",
              "weight": "{{w_forward}}"
            },
            {
              "name": "comment_value",
              "weight": "{{w_comment}}"
            },
            {
              "name": "profile_enter_value",
              "weight": "{{w_profile_enter}}"
            }
          ],
          "output_item_attr": "longterm_up_attribution_score",
          "type_name": "CommonRecoWeightedSumEnricher"
        },
        "deduplicate_BBE8FF": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [
              ""
            ],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "type_name": "CommonRecoResultsDeduplicateArranger"
        },
        "enrich_attr_by_lua_1CD144": {
          "$metadata": {
            "$input_common_attrs": [
              "slide_up_attribution_fr_weights_gamora",
              "slide_up_attribution_fr_weights_nebula",
              "tab_id"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "w_comment",
              "w_eplay",
              "w_follow",
              "w_forward",
              "w_like",
              "w_lplay",
              "w_p_staytime",
              "w_profile_enter",
              "w_time"
            ],
            "$output_item_attrs": []
          },
          "export_common_attr": [
            "w_lplay",
            "w_eplay",
            "w_time",
            "w_p_staytime",
            "w_like",
            "w_follow",
            "w_forward",
            "w_comment",
            "w_profile_enter"
          ],
          "function_for_common": "split_weights",
          "import_common_attr": [
            "slide_up_attribution_fr_weights_gamora",
            "slide_up_attribution_fr_weights_nebula",
            "tab_id"
          ],
          "lua_script": "function split_weights()\n          local slide_author_longterm_value_fr_weights = slide_up_attribution_fr_weights_gamora\n          if tab_id == 30000 then\n            slide_author_longterm_value_fr_weights = slide_up_attribution_fr_weights_nebula\n          end\n          local weights = {}\n          for word in string.gmatch(slide_author_longterm_value_fr_weights, '([^,]+)') do\n            key, value = string.match(word, '([^:]+):([^:]+)')\n            table.insert(weights, tonumber(value))\n          end\n          local w_lplay, w_eplay, w_time, w_p_staytime, w_like, w_follow, w_forward, w_comment, w_profile_enter = weights[1], weights[2], weights[3], weights[4], weights[5], weights[6]\n          \n          return w_lplay, w_eplay, w_time, w_p_staytime, w_like, w_follow, w_forward, w_comment, w_profile_enter\n        end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_attr_by_lua_365056": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "author_healthiness",
              "emp_ctr",
              "emp_ftr",
              "emp_ltr",
              "emp_wtr",
              "pctr",
              "pftr",
              "pltr",
              "plvtr",
              "pptr",
              "pvtr",
              "pwtr"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "author_healthiness_list",
              "empirical_ctrs",
              "empirical_ftrs",
              "empirical_ltrs",
              "empirical_wtrs",
              "pctrs",
              "pftrs",
              "pltrs",
              "plvtrs",
              "pptrs",
              "pvtrs",
              "pwtrs"
            ]
          },
          "export_item_attr": [
            "pctrs",
            "pltrs",
            "pftrs",
            "pwtrs",
            "plvtrs",
            "pvtrs",
            "pptrs",
            "empirical_ctrs",
            "empirical_ltrs",
            "empirical_ftrs",
            "empirical_wtrs",
            "author_healthiness_list"
          ],
          "function_for_item": "tolist",
          "import_item_attr": [
            "pctr",
            "pltr",
            "pftr",
            "pwtr",
            "plvtr",
            "pvtr",
            "pptr",
            "emp_ctr",
            "emp_ltr",
            "emp_ftr",
            "emp_wtr",
            "author_healthiness"
          ],
          "lua_script": "function tolist()\n            local pctr = pctr or 0.0\n            local pltr = pltr or 0.0\n            local pftr = pftr or 0.0\n            local pwtr = pwtr or 0.0\n            local plvtr = plvtr or 0.0\n            local pvtr = pvtr or 0.0\n            local pptr = pptr or 0.0\n            local empirical_ctr = emp_ctr or 0.0\n            local empirical_ltr = emp_ltr or 0.0\n            local empirical_ftr = emp_ftr or 0.0\n            local empirical_wtr = emp_wtr or 0.0\n            local author_healthiness = author_healthiness or 0.0\n\n            return {pctr}, {pltr}, {pftr}, {pwtr}, {plvtr},  {pvtr}, {pptr}, \n                  {empirical_ctr}, {empirical_ltr}, {empirical_ftr}, {empirical_wtr}, {author_healthiness}\n          end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_attr_by_lua_ACBBF1": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "reason"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "reason_string"
            ]
          },
          "export_item_attr": [
            "reason_string"
          ],
          "function_for_item": "change",
          "import_item_attr": [
            "reason"
          ],
          "lua_script": "function change()\n            local reason = reason or 0\n            return tostring(reason)\n          end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_with_protobuf_985263": {
          "$metadata": {
            "$input_common_attrs": [
              "user_info"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "click_pid_list",
              "follow_pid_list",
              "like_pid_list"
            ],
            "$output_item_attrs": []
          },
          "attrs": [
            {
              "name": "like_pid_list",
              "path": "user_profile_v1.like_list.photo_id"
            },
            {
              "name": "follow_pid_list",
              "path": "user_profile_v1.follow_list.photo_id"
            },
            {
              "name": "click_pid_list",
              "path": "user_profile_v1.click_list.photo_id"
            }
          ],
          "from_extra_var": "user_info",
          "is_common_attr": true,
          "type_name": "CommonRecoProtobufAttrEnricher"
        },
        "enrich_with_protobuf_BD27DF": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "photo_info"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "author_category_type",
              "author_dnn_cluster_id",
              "author_healthiness",
              "author_upload_count",
              "author_user_good_count"
            ]
          },
          "attrs": [
            {
              "name": "author_upload_count",
              "path": "author.upload_count"
            },
            {
              "name": "author_dnn_cluster_id",
              "path": "author.user_profile.exp_stat.duration"
            },
            {
              "name": "author_category_type",
              "path": "live_photo_info.author_category_type"
            },
            {
              "name": "author_user_good_count",
              "path": "author.user_good_count"
            },
            {
              "name": "author_healthiness",
              "path": "author.healthiness"
            }
          ],
          "from_extra_var": "photo_info",
          "is_common_attr": false,
          "type_name": "CommonRecoProtobufAttrEnricher"
        },
        "extract_kuiba_parameter_5295DE": {
          "$metadata": {
            "$input_common_attrs": [
              "click_pid_list",
              "follow_pid_list",
              "like_pid_list"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "common_kuiba_signs",
              "common_kuiba_slots"
            ],
            "$output_item_attrs": []
          },
          "config": {
            "click_pid_list": {
              "attrs": [
                {
                  "attr": [
                    "click_pid_list"
                  ],
                  "converter": "list",
                  "converter_args": {
                    "enable_filter": false,
                    "limit": 30,
                    "reversed": false
                  },
                  "expire_second": 2592000,
                  "key_type": 2201,
                  "mio_slot_key_type": 2201,
                  "type": 5
                }
              ]
            },
            "follow_pid_list": {
              "attrs": [
                {
                  "attr": [
                    "follow_pid_list"
                  ],
                  "converter": "list",
                  "converter_args": {
                    "enable_filter": false,
                    "limit": 30,
                    "reversed": false
                  },
                  "expire_second": 2592000,
                  "key_type": 2203,
                  "mio_slot_key_type": 2203,
                  "type": 5
                }
              ]
            },
            "like_pid_list": {
              "attrs": [
                {
                  "attr": [
                    "like_pid_list"
                  ],
                  "converter": "list",
                  "converter_args": {
                    "enable_filter": false,
                    "limit": 30,
                    "reversed": false
                  },
                  "expire_second": 2592000,
                  "key_type": 2202,
                  "mio_slot_key_type": 2202,
                  "type": 5
                }
              ]
            }
          },
          "is_common_attr": true,
          "parameters_output": "common_kuiba_signs",
          "slot_as_attr_name": false,
          "slots_output": "common_kuiba_slots",
          "type_name": "KuibaParameterAttrEnricher"
        },
        "extract_kuiba_parameter_D753D0": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "author_category_type",
              "author_dnn_cluster_id",
              "author_upload_count",
              "author_user_good_count",
              "emp_ctr",
              "emp_ftr",
              "emp_ltr",
              "emp_wtr",
              "pctr",
              "pftr",
              "pltr",
              "plvtr",
              "pptr",
              "pvtr",
              "pwtr"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "item_pxtr_signs",
              "item_pxtr_slots"
            ]
          },
          "config": {
            "author_category_type": {
              "attrs": [
                {
                  "attr": [
                    "author_category_type"
                  ],
                  "converter": "id",
                  "key_type": 1202
                }
              ]
            },
            "author_dnn_cluster_id": {
              "attrs": [
                {
                  "attr": [
                    "author_dnn_cluster_id"
                  ],
                  "converter": "id",
                  "key_type": 1201,
                  "mio_slot_key_type": 1201
                }
              ]
            },
            "author_upload_count": {
              "attrs": [
                {
                  "attr": [
                    "author_upload_count"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,100000,10,0",
                  "key_type": 1200
                }
              ]
            },
            "author_user_good_count": {
              "attrs": [
                {
                  "attr": [
                    "author_user_good_count"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,100,10,0",
                  "key_type": 1203
                }
              ]
            },
            "empirical_ctr": {
              "attrs": [
                {
                  "attr": [
                    "emp_ctr"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1,200,-1",
                  "key_type": 1109,
                  "mio_slot_key_type": 1109
                }
              ]
            },
            "empirical_ftr": {
              "attrs": [
                {
                  "attr": [
                    "emp_ftr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,200,-1",
                  "key_type": 1111,
                  "mio_slot_key_type": 1111
                }
              ]
            },
            "empirical_ltr": {
              "attrs": [
                {
                  "attr": [
                    "emp_ltr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,200,-1",
                  "key_type": 1110,
                  "mio_slot_key_type": 1110
                }
              ]
            },
            "empirical_wtr": {
              "attrs": [
                {
                  "attr": [
                    "emp_wtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,200,-1",
                  "key_type": 1112,
                  "mio_slot_key_type": 1112
                }
              ]
            },
            "pctr": {
              "attrs": [
                {
                  "attr": [
                    "pctr"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1,400,-1",
                  "key_type": 1101,
                  "mio_slot_key_type": 1101
                }
              ]
            },
            "pftr": {
              "attrs": [
                {
                  "attr": [
                    "pftr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,400,-1",
                  "key_type": 1103,
                  "mio_slot_key_type": 1103
                }
              ]
            },
            "pltr": {
              "attrs": [
                {
                  "attr": [
                    "pltr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,400,-1",
                  "key_type": 1102,
                  "mio_slot_key_type": 1102
                }
              ]
            },
            "plvtr": {
              "attrs": [
                {
                  "attr": [
                    "plvtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1,400,-1",
                  "key_type": 1105,
                  "mio_slot_key_type": 1105
                }
              ]
            },
            "pptr": {
              "attrs": [
                {
                  "attr": [
                    "pptr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,400,-1",
                  "key_type": 1108,
                  "mio_slot_key_type": 1108
                }
              ]
            },
            "pvtr": {
              "attrs": [
                {
                  "attr": [
                    "pvtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1,400,-1",
                  "key_type": 1107,
                  "mio_slot_key_type": 1107
                }
              ]
            },
            "pwtr": {
              "attrs": [
                {
                  "attr": [
                    "pwtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.2,0,1,400,-1",
                  "key_type": 1104,
                  "mio_slot_key_type": 1104
                }
              ]
            }
          },
          "is_common_attr": false,
          "parameters_output": "item_pxtr_signs",
          "slots_output": "item_pxtr_slots",
          "type_name": "KuibaParameterAttrEnricher"
        },
        "extract_with_ks_sign_feature_5B0AE3": {
          "$metadata": {
            "$input_common_attrs": [
              "tab_id",
              "user_info"
            ],
            "$input_item_attrs": [
              "cascade_pctr",
              "cascade_pltr",
              "cascade_plvtr",
              "cascade_psvr",
              "context_info",
              "photo_info",
              "reason_string"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "common_signs",
              "common_slots"
            ],
            "$output_item_attrs": [
              "item_signs",
              "item_slots"
            ]
          },
          "cascade_pctr_attr": "cascade_pctr",
          "cascade_pltr_attr": "cascade_pltr",
          "cascade_plvtr_attr": "cascade_plvtr",
          "cascade_psvr_attr": "cascade_psvr",
          "common_parameters_output": "common_signs",
          "common_slots_output": "common_slots",
          "context_info_attr": "context_info",
          "feature_list": [
            "ExtractSignAuthorExpCtr",
            "ExtractSignAuthorExpStat",
            "ExtractSignAuthorFansCount",
            "ExtractSignAuthorGender",
            "ExtractSignAuthorId",
            "ExtractSignAuthorId3",
            "ExtractSignCascadePctr",
            "ExtractSignCascadePltr",
            "ExtractSignCascadePlvtr",
            "ExtractSignCascadePsvr",
            "ExtractSignCascadeXctr",
            "ExtractSignPhotoAge",
            "ExtractSignPhotoDuration",
            "ExtractSignPhotoDuration0",
            "ExtractSignPhotoHetuClusterId",
            "ExtractSignPhotoHetuFaceid",
            "ExtractSignPhotoHetuTagOne",
            "ExtractSignPhotoHetuTagOne2",
            "ExtractSignPhotoHetuTagTwo",
            "ExtractSignPhotoHetuTagTwo2",
            "ExtractSignPhotoId",
            "ExtractSignPhotoLogClickCount",
            "ExtractSignPhotoLogLikeCount",
            "ExtractSignPhotoShortPlayRateV2",
            "ExtractSignPhotoTag",
            "ExtractSignReason",
            "ExtractSignTabInfo",
            "ExtractSignUserAllGender",
            "ExtractSignUserApplistTotal",
            "ExtractSignUserDeviceId",
            "ExtractSignUserExpRate",
            "ExtractSignUserId",
            "ExtractSignUserOrDeviceId",
            "ExtractSignUserRelationFriend",
            "ExtractSignUserRelationInfo",
            "ExtractSignWatchTimeExpStat",
            "ExtractSignWatchTimeExpStatOnDuration"
          ],
          "item_parameters_output": "item_signs",
          "item_slots_output": "item_slots",
          "photo_info_attr": "photo_info",
          "reason_attr": "reason_string",
          "tab_id_attr": "tab_id",
          "type_name": "MioKsSignFeatureEnricher",
          "user_info_attr": "user_info"
        },
        "filter_by_attr_7C7E66": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "photo_info"
            ],
            "$modify_item_tables": [
              ""
            ],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "attr_name": "photo_info",
          "remove_if_attr_missing": true,
          "type_name": "CommonRecoAttrFilterArranger"
        },
        "get_abtest_params_4BA291": {
          "$metadata": {
            "$input_common_attrs": [
              "_ABTEST_USER_TAG_NAMES_",
              "_ABTEST_USER_TAG_VALUES_"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "slide_up_attribution_fr_weights_gamora",
              "slide_up_attribution_fr_weights_nebula"
            ],
            "$output_item_attrs": []
          },
          "ab_params": [
            {
              "default_value": "lplay:0.0,eplay:0.0,time:0.0,p_staytime:0.0,like:0.0,follow:0.0,forward:0.0,comment:0.0,profile_enter:0",
              "param_name": "slide_up_attribution_fr_weights_gamora",
              "param_type": "string"
            },
            {
              "default_value": "lplay:0.0,eplay:0.0,time:0.0,p_staytime:0.0,like:0.0,follow:0.0,forward:0.0,comment:0.0.profile_enter:0",
              "param_name": "slide_up_attribution_fr_weights_nebula",
              "param_type": "string"
            }
          ],
          "biz_name": "THANOS_RECO",
          "type_name": "CommonRecoAbtestCommonAttrEnricher"
        },
        "parse_protobuf_from_string_3C6AC1": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "photo_info_str"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "photo_info"
            ]
          },
          "class_name": "ks.reco.PhotoInfo",
          "input_attr": "photo_info_str",
          "is_common_attr": false,
          "output_attr": "photo_info",
          "type_name": "CommonRecoProtobufParseAttrEnricher"
        },
        "parse_protobuf_from_string_99872F": {
          "$metadata": {
            "$input_common_attrs": [
              "user_info_str"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "user_info"
            ],
            "$output_item_attrs": []
          },
          "class_name": "ks.reco.UserInfo",
          "input_attr": "user_info_str",
          "is_common_attr": true,
          "output_attr": "user_info",
          "type_name": "CommonRecoProtobufParseAttrEnricher"
        },
        "perflog_attr_value_06D1EF": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "comment_value",
              "effective_play_value",
              "follow_value",
              "forward_value",
              "like_value",
              "long_play_value",
              "play_time_min",
              "profile_enter_value",
              "profile_stay_time_min"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "check_point": "model_output",
          "item_attrs": [
            "long_play_value",
            "effective_play_value",
            "play_time_min",
            "profile_stay_time_min",
            "like_value",
            "follow_value",
            "forward_value",
            "comment_value",
            "profile_enter_value"
          ],
          "type_name": "CommonRecoAttrValuePerflogObserver"
        },
        "perflog_attr_value_9D3FBD": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "longterm_up_attribution_score"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "check_point": "final_output",
          "item_attrs": [
            "longterm_up_attribution_score"
          ],
          "type_name": "CommonRecoAttrValuePerflogObserver"
        },
        "perflog_attr_value_AAED6F": {
          "$metadata": {
            "$input_common_attrs": [
              "w_comment",
              "w_eplay",
              "w_follow",
              "w_forward",
              "w_like",
              "w_lplay",
              "w_p_staytime",
              "w_profile_enter",
              "w_time"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "check_point": "weights",
          "common_attrs": [
            "w_lplay",
            "w_eplay",
            "w_time",
            "w_p_staytime",
            "w_like",
            "w_follow",
            "w_forward",
            "w_comment",
            "w_profile_enter"
          ],
          "type_name": "CommonRecoAttrValuePerflogObserver"
        },
        "uni_predict_fused_3B11A8": {
          "$metadata": {
            "$input_common_attrs": [
              "common_kuiba_signs",
              "common_kuiba_slots",
              "common_signs",
              "common_slots"
            ],
            "$input_item_attrs": [
              "author_healthiness_list",
              "empirical_ctrs",
              "empirical_ftrs",
              "empirical_ltrs",
              "empirical_wtrs",
              "item_pxtr_signs",
              "item_pxtr_slots",
              "item_signs",
              "item_slots",
              "pctrs",
              "pftrs",
              "pltrs",
              "plvtrs",
              "pptrs",
              "pvtrs",
              "pwtrs"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "comment_value",
              "effective_play_value",
              "follow_value",
              "forward_value",
              "like_value",
              "long_play_value",
              "play_time_min",
              "profile_enter_value",
              "profile_stay_time_min"
            ]
          },
          "batching_config": {
            "batch_task_type": "BatchTensorflowTask",
            "batch_timeout_micros": 0,
            "max_batch_size": 2048,
            "max_enqueued_batches": 24
          },
          "embedding_fetchers": [
            {
              "colossusdb_embd_service_name": "fr_up_longterm_attribution_model_v1",
              "colossusdb_embd_table_name": "up_attribution_emb",
              "common_parameters_inputs": [
                "common_signs",
                "common_kuiba_signs"
              ],
              "common_slots_inputs": [
                "common_slots",
                "common_kuiba_slots"
              ],
              "fetcher_type": "ColossusdbEmbeddingServerFetcher",
              "max_signs_per_request": 500,
              "parameters_inputs": [
                "item_signs",
                "item_pxtr_signs"
              ],
              "slots_config": [
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "input_name": "uid_emb",
                  "slots": "38 34",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 64,
                  "dtype": "mio_int16",
                  "input_name": "author_emb",
                  "slots": "128 519 1142",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 16,
                  "dtype": "mio_int16",
                  "input_name": "pid_stat",
                  "slots": "185 685 686 141",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 16,
                  "dtype": "mio_int16",
                  "input_name": "pid_gate",
                  "slots": "786 787",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 16,
                  "dtype": "mio_int16",
                  "input_name": "pid_pxtr",
                  "slots": "1101 1102 1103 1104 1105 1107 1108 1109 1110 1111 1112",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 16,
                  "dtype": "mio_int16",
                  "input_name": "author_fea",
                  "slots": "1200 1201 1202 1203",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "expand": 30,
                  "input_name": "uid_action_list_click",
                  "slots": "2201",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "expand": 30,
                  "input_name": "uid_action_list_like",
                  "slots": "2202",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "expand": 30,
                  "input_name": "uid_action_list_follow",
                  "slots": "2203",
                  "tensor_dtype": "float32"
                }
              ],
              "slots_inputs": [
                "item_slots",
                "item_pxtr_slots"
              ],
              "timeout_ms": 50
            }
          ],
          "executor_config": {
            "inter_op_parallelism_threads_num": 32,
            "intra_op_parallelism_threads_num": 32
          },
          "graph": "base64:",
          "inputs": [
            {
              "attr_name": "uid_emb",
              "compress_group": "USER",
              "dim": 128,
              "tensor_name": "uid_emb"
            },
            {
              "attr_name": "author_emb",
              "dim": 192,
              "tensor_name": "author_emb"
            },
            {
              "attr_name": "pid_stat",
              "dim": 64,
              "tensor_name": "pid_stat"
            },
            {
              "attr_name": "pid_gate",
              "dim": 32,
              "tensor_name": "pid_gate"
            },
            {
              "attr_name": "pid_pxtr",
              "dim": 176,
              "tensor_name": "pid_pxtr"
            },
            {
              "attr_name": "author_fea",
              "dim": 64,
              "tensor_name": "author_fea"
            },
            {
              "attr_name": "uid_action_list_click",
              "compress_group": "USER",
              "dim": 1920,
              "tensor_name": "uid_action_list_click"
            },
            {
              "attr_name": "uid_action_list_like",
              "compress_group": "USER",
              "dim": 1920,
              "tensor_name": "uid_action_list_like"
            },
            {
              "attr_name": "uid_action_list_follow",
              "compress_group": "USER",
              "dim": 1920,
              "tensor_name": "uid_action_list_follow"
            },
            {
              "attr_name": "pctrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pctr"
            },
            {
              "attr_name": "pltrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pltr"
            },
            {
              "attr_name": "pftrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pftr"
            },
            {
              "attr_name": "pwtrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pwtr"
            },
            {
              "attr_name": "plvtrs",
              "common": false,
              "dim": 1,
              "tensor_name": "plvtr"
            },
            {
              "attr_name": "pvtrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pvtr"
            },
            {
              "attr_name": "pptrs",
              "common": false,
              "dim": 1,
              "tensor_name": "pptr"
            },
            {
              "attr_name": "empirical_ctrs",
              "common": false,
              "dim": 1,
              "tensor_name": "empirical_ctr"
            },
            {
              "attr_name": "empirical_ltrs",
              "common": false,
              "dim": 1,
              "tensor_name": "empirical_ltr"
            },
            {
              "attr_name": "empirical_ftrs",
              "common": false,
              "dim": 1,
              "tensor_name": "empirical_ftr"
            },
            {
              "attr_name": "empirical_wtrs",
              "common": false,
              "dim": 1,
              "tensor_name": "empirical_wtr"
            },
            {
              "attr_name": "author_healthiness_list",
              "common": false,
              "dim": 1,
              "tensor_name": "author_healthiness"
            }
          ],
          "key": "fr_up_longterm_attribution_model_v1",
          "model_loader_config": {
            "executor_batchsizes": [
              512,
              1024,
              2048
            ],
            "implicit_batch": true,
            "receive_dnn_model_as_macro_block": true,
            "rowmajor": true,
            "type": "MioTFExecutedByTensorFlowModelLoader"
          },
          "outputs": [
            {
              "attr_name": "long_play_value",
              "tensor_name": "model/long_play_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "effective_play_value",
              "tensor_name": "model/effective_play_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "play_time_min",
              "tensor_name": "model/play_time_min_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "profile_stay_time_min",
              "tensor_name": "model/profile_stay_time_min_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "like_value",
              "tensor_name": "model/like_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "follow_value",
              "tensor_name": "model/follow_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "forward_value",
              "tensor_name": "model/forward_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "comment_value",
              "tensor_name": "model/comment_value_layers/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "profile_enter_value",
              "tensor_name": "model/profile_enter_value_layers/dense_2/Sigmoid:0"
            }
          ],
          "param": [
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "long_play_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "long_play_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "long_play_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "long_play_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "long_play_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "long_play_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "effective_play_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "effective_play_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "effective_play_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "effective_play_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "effective_play_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "effective_play_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "play_time_min_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "play_time_min_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "play_time_min_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "play_time_min_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "play_time_min_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "play_time_min_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_stay_time_min_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_stay_time_min_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_stay_time_min_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_stay_time_min_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_stay_time_min_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_stay_time_min_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "like_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "like_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "like_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "like_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "like_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "like_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "follow_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "follow_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "follow_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "follow_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "follow_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "follow_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "forward_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "forward_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "forward_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "forward_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "forward_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "forward_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "comment_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "comment_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "comment_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "comment_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "comment_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "comment_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_enter_value_layers/dense/kernel",
              "rown": 849,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_enter_value_layers/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_enter_value_layers/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_enter_value_layers/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "profile_enter_value_layers/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "profile_enter_value_layers/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            }
          ],
          "queue_prefix": "fr_up_longterm_attribution_model_v1",
          "type_name": "UniPredictFusedItemAttrEnricher"
        }
      },
      "type_name": "CommonRecoPipeline"
    },
    "pipeline_map": {
      "fr_up_longterm_attribution_model_v1": {
        "__PARENT": "base_pipeline",
        "pipeline": [
          "deduplicate_BBE8FF",
          "parse_protobuf_from_string_99872F",
          "parse_protobuf_from_string_3C6AC1",
          "filter_by_attr_7C7E66",
          "enrich_attr_by_lua_ACBBF1",
          "build_protobuf_247E20",
          "enrich_with_protobuf_985263",
          "enrich_with_protobuf_BD27DF",
          "arrange_by_sub_flow_BDF4D6",
          "get_abtest_params_4BA291",
          "perflog_attr_value_06D1EF",
          "enrich_attr_by_lua_1CD144",
          "perflog_attr_value_AAED6F",
          "calc_weighted_sum_C8753A",
          "perflog_attr_value_9D3FBD"
        ]
      },
      "predict_sub_flow": {
        "__PARENT": "base_pipeline",
        "pipeline": [
          "extract_with_ks_sign_feature_5B0AE3",
          "extract_kuiba_parameter_D753D0",
          "extract_kuiba_parameter_5295DE",
          "enrich_attr_by_lua_365056",
          "uni_predict_fused_3B11A8"
        ]
      }
    }
  },
  "request_type_config": {
    "fr_up_longterm_attribution_model_v1": [
      "fr_up_longterm_attribution_model_v1"
    ]
  },
  "return_item_attrs": [
    "longterm_up_attribution_score"
  ]
}