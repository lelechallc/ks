{
  "_CONFIG_VERSION": "20b42101966062e86ce8494637fd5146_local",
  "_DRAGONFLY_CREATE_TIME": "2024-08-23 17:37:26",
  "_DRAGONFLY_VERSION": "0.8.2",
  "attrs_from_request": {
    "common_attr": [
      "city_name",
      "is_political",
      "mod",
      "page_type_str",
      "photo_author_id",
      "photo_id",
      "product_name"
    ],
    "item_attr": [
      "author_id",
      "auto_expand",
      "comment_content_segs",
      "comment_genre",
      "content_length",
      "content_segment_num",
      "copy_cnt",
      "dislike_cnt",
      "first_level_like_cnt",
      "first_like_cnt",
      "has_emoji",
      "has_pic",
      "inform_cnt",
      "is_ai_kwai_wonderful_rely",
      "is_ai_play",
      "is_comment_contain_at",
      "is_text_emoji",
      "is_text_pic",
      "like_cnt",
      "like_cnt_weekly",
      "minute_diff",
      "mmu_category_tag",
      "mmu_emotion_tag",
      "mmu_entity_list",
      "predict_like_score",
      "predict_reply_score",
      "quality_score",
      "quality_v2_score",
      "realshow_cnt",
      "related_score",
      "reply_cnt",
      "reply_cnt_weekly",
      "risk_inactive_tag",
      "risk_insult_tag",
      "risk_negative_tag",
      "show_cnt_weekly",
      "sub_like_cnt"
    ]
  },
  "default_request_type": "hot_comment_default",
  "kess_config": {
    "service_name": "grpc_CommentAddFeatInfer"
  },
  "pipeline_manager_config": {
    "base_pipeline": {
      "processor": {
        "_branch_controller_B29C42BE": {
          "$branch_start": "_branch_controller_B29C42BE",
          "$code_info": "[if] B29C42BE infer_old.py in prepare(): .if_(\"#(user_profile or '') > 0\")",
          "$metadata": {
            "$input_common_attrs": [
              "user_profile"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "_if_control_attr_2"
            ],
            "$output_item_attrs": []
          },
          "export_common_attr": [
            "_if_control_attr_2"
          ],
          "for_branch_control": true,
          "function_for_common": "evaluate",
          "import_common_attr": [
            "user_profile"
          ],
          "lua_script": "function evaluate() if (#(user_profile or '') > 0) then return false else return true end end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "_branch_controller_F39EF552": {
          "$branch_start": "_branch_controller_F39EF552",
          "$code_info": "[if] F39EF552 infer_old.py in prepare(): .if_(\"request_item_num == 0\")",
          "$metadata": {
            "$input_common_attrs": [
              "request_item_num"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "_if_control_attr_1"
            ],
            "$output_item_attrs": []
          },
          "export_common_attr": [
            "_if_control_attr_1"
          ],
          "for_branch_control": true,
          "function_for_common": "evaluate",
          "import_common_attr": [
            "request_item_num"
          ],
          "lua_script": "function evaluate() if (request_item_num == 0) then return false else return true end end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "copy_item_meta_info_6E522F": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "comment_id"
            ]
          },
          "save_item_key_to_attr": "comment_id",
          "type_name": "CommonRecoItemMetaInfoEnricher"
        },
        "copy_user_meta_info_17EC10": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "device_id",
              "user_id"
            ],
            "$output_item_attrs": []
          },
          "save_device_id_to_attr": "device_id",
          "save_user_id_to_attr": "user_id",
          "type_name": "CommonRecoUserMetaInfoEnricher"
        },
        "count_reco_result_A90E0C": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "request_item_num"
            ],
            "$output_item_attrs": []
          },
          "save_result_size_to_common_attr": "request_item_num",
          "type_name": "CommonRecoCountRecoResultEnricher"
        },
        "deduplicate_BBE8FF": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [
              ""
            ],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "type_name": "CommonRecoResultsDeduplicateArranger"
        },
        "enrich_attr_by_lua_4AC68B": {
          "$metadata": {
            "$input_common_attrs": [
              "user_profile_values"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "age_segment",
              "gender"
            ],
            "$output_item_attrs": []
          },
          "export_common_attr": [
            "gender",
            "age_segment"
          ],
          "function_for_common": "cal",
          "import_common_attr": [
            "user_profile_values"
          ],
          "lua_script": "function cal()\n            if #(user_profile_values or {}) >= 2 then\n              return user_profile_values[1], user_profile_values[2]\n            else\n              return 0, 0\n            end\n          end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_attr_by_lua_A9749E": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "comment_content_segs"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "final_seg_num",
              "mask_pack"
            ]
          },
          "export_item_attr": [
            "final_seg_num",
            "mask_pack"
          ],
          "function_for_item": "seg_num",
          "import_item_attr": [
            "comment_content_segs"
          ],
          "lua_script": "function seg_num()\n                local final_seg_num = math.min(15, #(comment_content_segs or {}))\n                \n                local mask_pack = {}\n                for i=1, final_seg_num do\n                    mask_pack[i] = 1.0\n                end\n                while #mask_pack < 15 do\n                    table.insert(mask_pack, 0.0)\n                end\n                return final_seg_num, mask_pack\n            end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_attr_by_lua_BC689D": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "copy_cnt",
              "dislike_cnt",
              "first_level_like_cnt",
              "first_like_cnt",
              "like_cnt",
              "like_cnt_weekly",
              "minute_diff",
              "realshow_cnt",
              "reply_cnt",
              "reply_cnt_weekly",
              "show_cnt_weekly",
              "sub_like_cnt"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "dislike_like_ratio",
              "dtr",
              "ltr",
              "ltr_copy",
              "ltr_weekly",
              "rtr",
              "rtr_copy",
              "rtr_weekly",
              "sqrt_copy_cnt",
              "sqrt_dislike_cnt",
              "sqrt_first_level_like_cnt",
              "sqrt_first_like_cnt",
              "sqrt_hour_diff",
              "sqrt_like_cnt",
              "sqrt_reply_cnt",
              "sqrt_sub_like_cnt",
              "sub_root_like_ratio"
            ]
          },
          "export_item_attr": [
            "ltr",
            "rtr",
            "dtr",
            "sqrt_like_cnt",
            "sqrt_reply_cnt",
            "sqrt_dislike_cnt",
            "sqrt_hour_diff",
            "sqrt_sub_like_cnt",
            "sqrt_first_level_like_cnt",
            "sqrt_first_like_cnt",
            "dislike_like_ratio",
            "sub_root_like_ratio",
            "ltr_weekly",
            "rtr_weekly",
            "sqrt_copy_cnt",
            "ltr_copy",
            "rtr_copy"
          ],
          "function_for_item": "cal_xtr",
          "import_item_attr": [
            "like_cnt",
            "reply_cnt",
            "dislike_cnt",
            "realshow_cnt",
            "first_like_cnt",
            "sub_like_cnt",
            "first_level_like_cnt",
            "show_cnt_weekly",
            "like_cnt_weekly",
            "reply_cnt_weekly",
            "copy_cnt",
            "minute_diff"
          ],
          "lua_script": "function cal_xtr()\n                local vv = realshow_cnt or 0.0\n                local ltr = like_cnt / (vv + 1.0)\n                local rtr = reply_cnt / (vv + 1.0)\n                local dtr = dislike_cnt / (vv + 1.0)\n                local sqrt_like_cnt = math.sqrt(like_cnt)\n                local sqrt_reply_cnt = math.sqrt(reply_cnt)\n                local sqrt_dislike_cnt = math.sqrt(dislike_cnt)\n                local sqrt_hour_diff = math.sqrt(minute_diff / 60)\n                local sqrt_sub_like_cnt = math.sqrt(sub_like_cnt)\n                local sqrt_first_level_like_cnt = math.sqrt(first_level_like_cnt)\n                local sqrt_first_like_cnt = math.sqrt(first_like_cnt)\n                local dislike_like_ratio = dislike_cnt / (like_cnt + 1.0)\n                local sub_root_like_ratio = first_like_cnt / (first_level_like_cnt + 1.0)\n                local ltr_weekly = like_cnt_weekly / (show_cnt_weekly + 1.0)\n                local rtr_weekly = reply_cnt_weekly / (show_cnt_weekly + 1.0)\n                local sqrt_copy_cnt = math.sqrt(copy_cnt)\n                return ltr, rtr, dtr, sqrt_like_cnt, sqrt_reply_cnt, sqrt_dislike_cnt, sqrt_hour_diff, sqrt_sub_like_cnt, sqrt_first_level_like_cnt, sqrt_first_like_cnt, dislike_like_ratio, sub_root_like_ratio, ltr_weekly, rtr_weekly, sqrt_copy_cnt, ltr, rtr\n            end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "enrich_attr_by_lua_E26C22": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "comment_content_segs"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "comment_content_segs"
            ]
          },
          "export_item_attr": [
            "comment_content_segs"
          ],
          "function_for_item": "add_cls",
          "import_item_attr": [
            "comment_content_segs"
          ],
          "lua_script": "function add_cls()\n                local added = {}\n                added[1] = \"[cls]\"\n                for i = 1, #(comment_content_segs or {}) do  \n                    added[i+1] = comment_content_segs[i]\n                end\n                return added\n            end",
          "type_name": "CommonRecoLuaAttrEnricher"
        },
        "extract_kuiba_parameter_4E0719": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [
              "author_id",
              "auto_expand",
              "comment_content_segs",
              "comment_genre",
              "comment_id",
              "content_length",
              "content_segment_num",
              "dislike_cnt",
              "dislike_like_ratio",
              "dtr",
              "has_emoji",
              "has_pic",
              "inform_cnt",
              "is_ai_kwai_wonderful_rely",
              "is_ai_play",
              "is_comment_contain_at",
              "is_text_emoji",
              "is_text_pic",
              "like_cnt",
              "ltr",
              "ltr_copy",
              "ltr_weekly",
              "minute_diff",
              "mmu_category_tag",
              "mmu_emotion_tag",
              "pos_ids",
              "related_score",
              "reply_cnt",
              "rtr",
              "rtr_copy",
              "rtr_weekly",
              "showAction",
              "sqrt_copy_cnt",
              "sqrt_dislike_cnt",
              "sqrt_first_level_like_cnt",
              "sqrt_first_like_cnt",
              "sqrt_hour_diff",
              "sqrt_like_cnt",
              "sqrt_reply_cnt",
              "sqrt_sub_like_cnt",
              "sub_root_like_ratio"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "comment_item_signs",
              "comment_item_slots"
            ]
          },
          "config": {
            "author_id": {
              "attrs": [
                {
                  "attr": [
                    "author_id"
                  ],
                  "converter": "id",
                  "key_type": 202,
                  "mio_slot_key_type": 202
                }
              ]
            },
            "auto_expand": {
              "attrs": [
                {
                  "attr": [
                    "auto_expand"
                  ],
                  "converter": "id",
                  "key_type": 270,
                  "mio_slot_key_type": 270
                }
              ]
            },
            "comment_content_segs": {
              "attrs": [
                {
                  "attr": [
                    "comment_content_segs"
                  ],
                  "converter": "list",
                  "converter_args": {
                    "enable_filter": false,
                    "limit": 15,
                    "reversed": false
                  },
                  "key_type": 300,
                  "mio_slot_key_type": 300,
                  "type": 5
                }
              ]
            },
            "comment_genre": {
              "attrs": [
                {
                  "attr": [
                    "comment_genre"
                  ],
                  "converter": "id",
                  "key_type": 250,
                  "mio_slot_key_type": 250
                }
              ]
            },
            "comment_id": {
              "attrs": [
                {
                  "attr": [
                    "comment_id"
                  ],
                  "converter": "id",
                  "key_type": 201,
                  "mio_slot_key_type": 201
                }
              ]
            },
            "content_length": {
              "attrs": [
                {
                  "attr": [
                    "content_length"
                  ],
                  "converter": "discrete",
                  "converter_args": "5,0,1000,1,0",
                  "key_type": 288,
                  "mio_slot_key_type": 288
                }
              ]
            },
            "content_segment_num": {
              "attrs": [
                {
                  "attr": [
                    "content_segment_num"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 289,
                  "mio_slot_key_type": 289
                }
              ]
            },
            "dislike_cnt": {
              "attrs": [
                {
                  "attr": [
                    "dislike_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "3,0,100000,1,0",
                  "key_type": 209,
                  "mio_slot_key_type": 209
                }
              ]
            },
            "dislike_like_ratio": {
              "attrs": [
                {
                  "attr": [
                    "dislike_like_ratio"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,1000,1,0",
                  "key_type": 286,
                  "mio_slot_key_type": 286
                }
              ]
            },
            "dtr": {
              "attrs": [
                {
                  "attr": [
                    "dtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 283,
                  "mio_slot_key_type": 283
                }
              ]
            },
            "has_emoji": {
              "attrs": [
                {
                  "attr": [
                    "has_emoji"
                  ],
                  "converter": "id",
                  "key_type": 293,
                  "mio_slot_key_type": 293
                }
              ]
            },
            "has_pic": {
              "attrs": [
                {
                  "attr": [
                    "has_pic"
                  ],
                  "converter": "id",
                  "key_type": 292,
                  "mio_slot_key_type": 292
                }
              ]
            },
            "inform_cnt": {
              "attrs": [
                {
                  "attr": [
                    "inform_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 290,
                  "mio_slot_key_type": 290
                }
              ]
            },
            "is_ai_kwai_wonderful_rely": {
              "attrs": [
                {
                  "attr": [
                    "is_ai_kwai_wonderful_rely"
                  ],
                  "converter": "id",
                  "key_type": 297,
                  "mio_slot_key_type": 297
                }
              ]
            },
            "is_ai_play": {
              "attrs": [
                {
                  "attr": [
                    "is_ai_play"
                  ],
                  "converter": "id",
                  "key_type": 296,
                  "mio_slot_key_type": 296
                }
              ]
            },
            "is_comment_contain_at": {
              "attrs": [
                {
                  "attr": [
                    "is_comment_contain_at"
                  ],
                  "converter": "id",
                  "key_type": 298,
                  "mio_slot_key_type": 298
                }
              ]
            },
            "is_text_emoji": {
              "attrs": [
                {
                  "attr": [
                    "is_text_emoji"
                  ],
                  "converter": "id",
                  "key_type": 295,
                  "mio_slot_key_type": 295
                }
              ]
            },
            "is_text_pic": {
              "attrs": [
                {
                  "attr": [
                    "is_text_pic"
                  ],
                  "converter": "id",
                  "key_type": 294,
                  "mio_slot_key_type": 294
                }
              ]
            },
            "like_cnt": {
              "attrs": [
                {
                  "attr": [
                    "like_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "5,0,100000,1,0",
                  "key_type": 203,
                  "mio_slot_key_type": 203
                }
              ]
            },
            "ltr": {
              "attrs": [
                {
                  "attr": [
                    "ltr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.001,0,1000,1,0",
                  "key_type": 206,
                  "mio_slot_key_type": 206
                }
              ]
            },
            "ltr_copy": {
              "attrs": [
                {
                  "attr": [
                    "ltr_copy"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 281,
                  "mio_slot_key_type": 281
                }
              ]
            },
            "ltr_weekly": {
              "attrs": [
                {
                  "attr": [
                    "ltr_weekly"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 284,
                  "mio_slot_key_type": 284
                }
              ]
            },
            "minute_diff": {
              "attrs": [
                {
                  "attr": [
                    "minute_diff"
                  ],
                  "converter": "discrete",
                  "converter_args": "36,0,336,1,0",
                  "key_type": 205,
                  "mio_slot_key_type": 205
                }
              ]
            },
            "mmu_category_tag": {
              "attrs": [
                {
                  "attr": [
                    "mmu_category_tag"
                  ],
                  "converter": "id",
                  "key_type": 255,
                  "mio_slot_key_type": 255
                }
              ]
            },
            "mmu_emotion_tag": {
              "attrs": [
                {
                  "attr": [
                    "mmu_emotion_tag"
                  ],
                  "converter": "id",
                  "key_type": 254,
                  "mio_slot_key_type": 254
                }
              ]
            },
            "pos_ids": {
              "attrs": [
                {
                  "attr": [
                    "pos_ids"
                  ],
                  "converter": "list",
                  "converter_args": {
                    "enable_filter": false,
                    "limit": 15,
                    "reversed": false
                  },
                  "key_type": 301,
                  "mio_slot_key_type": 301,
                  "type": 5
                }
              ]
            },
            "related_score": {
              "attrs": [
                {
                  "attr": [
                    "related_score"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 279,
                  "mio_slot_key_type": 279
                }
              ]
            },
            "reply_cnt": {
              "attrs": [
                {
                  "attr": [
                    "reply_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "5,0,100000,1,0",
                  "key_type": 204,
                  "mio_slot_key_type": 204
                }
              ]
            },
            "rtr": {
              "attrs": [
                {
                  "attr": [
                    "rtr"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.001,0,1000,1,0",
                  "key_type": 207,
                  "mio_slot_key_type": 207
                }
              ]
            },
            "rtr_copy": {
              "attrs": [
                {
                  "attr": [
                    "rtr_copy"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 282,
                  "mio_slot_key_type": 282
                }
              ]
            },
            "rtr_weekly": {
              "attrs": [
                {
                  "attr": [
                    "rtr_weekly"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,100,1,0",
                  "key_type": 285,
                  "mio_slot_key_type": 285
                }
              ]
            },
            "showAction": {
              "attrs": [
                {
                  "attr": [
                    "showAction"
                  ],
                  "converter": "id",
                  "key_type": 208,
                  "mio_slot_key_type": 208
                }
              ]
            },
            "sqrt_copy_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_copy_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 291,
                  "mio_slot_key_type": 291
                }
              ]
            },
            "sqrt_dislike_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_dislike_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 273,
                  "mio_slot_key_type": 273
                }
              ]
            },
            "sqrt_first_level_like_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_first_level_like_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 276,
                  "mio_slot_key_type": 276
                }
              ]
            },
            "sqrt_first_like_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_first_like_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 277,
                  "mio_slot_key_type": 277
                }
              ]
            },
            "sqrt_hour_diff": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_hour_diff"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 274,
                  "mio_slot_key_type": 274
                }
              ]
            },
            "sqrt_like_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_like_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 271,
                  "mio_slot_key_type": 271
                }
              ]
            },
            "sqrt_reply_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_reply_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 272,
                  "mio_slot_key_type": 272
                }
              ]
            },
            "sqrt_sub_like_cnt": {
              "attrs": [
                {
                  "attr": [
                    "sqrt_sub_like_cnt"
                  ],
                  "converter": "discrete",
                  "converter_args": "1,0,1000,1,0",
                  "key_type": 275,
                  "mio_slot_key_type": 275
                }
              ]
            },
            "sub_root_like_ratio": {
              "attrs": [
                {
                  "attr": [
                    "sub_root_like_ratio"
                  ],
                  "converter": "discrete",
                  "converter_args": "0.01,0,1000,1,0",
                  "key_type": 287,
                  "mio_slot_key_type": 287
                }
              ]
            }
          },
          "is_common_attr": false,
          "parameters_output": "comment_item_signs",
          "slots_output": "comment_item_slots",
          "type_name": "KuibaParameterAttrEnricher"
        },
        "extract_kuiba_parameter_CC24E3": {
          "$metadata": {
            "$input_common_attrs": [
              "age_segment",
              "device_id",
              "gender",
              "is_political",
              "mod",
              "page_type_str",
              "photo_author_id",
              "photo_id",
              "product_name",
              "user_id"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "comment_common_signs",
              "comment_common_slots"
            ],
            "$output_item_attrs": []
          },
          "config": {
            "age_segment": {
              "attrs": [
                {
                  "attr": [
                    "age_segment"
                  ],
                  "converter": "id",
                  "key_type": 102,
                  "mio_slot_key_type": 102
                }
              ]
            },
            "device_id": {
              "attrs": [
                {
                  "attr": [
                    "device_id"
                  ],
                  "converter": "id",
                  "key_type": 106,
                  "mio_slot_key_type": 106
                }
              ]
            },
            "gender": {
              "attrs": [
                {
                  "attr": [
                    "gender"
                  ],
                  "converter": "id",
                  "key_type": 101,
                  "mio_slot_key_type": 101
                }
              ]
            },
            "is_political": {
              "attrs": [
                {
                  "attr": [
                    "is_political"
                  ],
                  "converter": "id",
                  "key_type": 112,
                  "mio_slot_key_type": 112
                }
              ]
            },
            "mod": {
              "attrs": [
                {
                  "attr": [
                    "mod"
                  ],
                  "converter": "id",
                  "key_type": 110,
                  "mio_slot_key_type": 110
                }
              ]
            },
            "page_type_str": {
              "attrs": [
                {
                  "attr": [
                    "page_type_str"
                  ],
                  "converter": "id",
                  "key_type": 111,
                  "mio_slot_key_type": 111
                }
              ]
            },
            "photo_author_id": {
              "attrs": [
                {
                  "attr": [
                    "photo_author_id"
                  ],
                  "converter": "id",
                  "key_type": 202,
                  "mio_slot_key_type": 104
                }
              ]
            },
            "photo_id": {
              "attrs": [
                {
                  "attr": [
                    "photo_id"
                  ],
                  "converter": "id",
                  "key_type": 103,
                  "mio_slot_key_type": 103
                }
              ]
            },
            "product_name": {
              "attrs": [
                {
                  "attr": [
                    "product_name"
                  ],
                  "converter": "id",
                  "key_type": 113,
                  "mio_slot_key_type": 113
                }
              ]
            },
            "user_id": {
              "attrs": [
                {
                  "attr": [
                    "user_id"
                  ],
                  "converter": "id",
                  "key_type": 202,
                  "mio_slot_key_type": 105
                }
              ]
            }
          },
          "is_common_attr": true,
          "parameters_output": "comment_common_signs",
          "slots_output": "comment_common_slots",
          "type_name": "KuibaParameterAttrEnricher"
        },
        "get_common_attr_from_redis_7B2CD9": {
          "$eval_common_attrs": [
            "user_id"
          ],
          "$metadata": {
            "$input_common_attrs": [
              "user_id"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "user_profile"
            ],
            "$output_item_attrs": []
          },
          "cache_bits": 20,
          "cache_expire_second": 43200,
          "cache_name": "infer_comment_user_profile_cache",
          "cluster_name": "recoPoiCategoryMapping",
          "redis_params": [
            {
              "output_attr_name": "user_profile",
              "redis_key": "{{return 'cm_profile_'..tostring(user_id or 0)}}"
            }
          ],
          "type_name": "CommonRecoRedisCommonAttrEnricher"
        },
        "return__28C561": {
          "$metadata": {
            "$input_common_attrs": [
              "_if_control_attr_1"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": []
          },
          "skip": "{{_if_control_attr_1}}",
          "status_code": 0,
          "type_name": "CommonRecoExecutionStatusEnricher"
        },
        "set_attr_value_AE743F": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "pos_ids"
            ]
          },
          "item_attrs": [
            {
              "name": "pos_ids",
              "type": "int_list",
              "value": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
              ]
            }
          ],
          "type_name": "CommonRecoItemAttrDefaultValueEnricher"
        },
        "set_attr_value_C82E6E": {
          "$metadata": {
            "$input_common_attrs": [],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "showAction"
            ]
          },
          "item_attrs": [
            {
              "name": "showAction",
              "type": "int",
              "value": 1
            }
          ],
          "type_name": "CommonRecoItemAttrDefaultValueEnricher"
        },
        "split_string_B8ECA2": {
          "$metadata": {
            "$input_common_attrs": [
              "_if_control_attr_2",
              "user_profile"
            ],
            "$input_item_attrs": [],
            "$modify_item_tables": [],
            "$output_common_attrs": [
              "user_profile_values"
            ],
            "$output_item_attrs": []
          },
          "delimiters": ",",
          "input_common_attr": "user_profile",
          "output_common_attr": "user_profile_values",
          "parse_to_int": true,
          "skip": "{{_if_control_attr_2}}",
          "type_name": "CommonRecoStringSplitEnricher"
        },
        "uni_predict_fused_E101D8": {
          "$metadata": {
            "$input_common_attrs": [
              "comment_common_signs",
              "comment_common_slots"
            ],
            "$input_item_attrs": [
              "comment_item_signs",
              "comment_item_slots",
              "final_seg_num",
              "mask_pack"
            ],
            "$modify_item_tables": [],
            "$output_common_attrs": [],
            "$output_item_attrs": [
              "audience_xtr",
              "continuous_expand_xtr",
              "copy_xtr",
              "expand_xtr",
              "like_xtr",
              "reply_xtr",
              "share_xtr"
            ]
          },
          "batching_config": {
            "batch_task_type": "BatchTensorflowTask",
            "batch_timeout_micros": 0,
            "max_batch_size": 4096,
            "max_enqueued_batches": 1
          },
          "debug_tensor": false,
          "embedding_fetchers": [
            {
              "client_side_shard": true,
              "common_parameters_inputs": [
                "comment_common_signs"
              ],
              "common_slots_inputs": [
                "comment_common_slots"
              ],
              "fetcher_type": "BtEmbeddingServerFetcher",
              "kess_service": "grpc_CommentAddFeatEmb",
              "max_signs_per_request": 500,
              "parameters_inputs": [
                "comment_item_signs"
              ],
              "shards": 1,
              "slots_config": [
                {
                  "compress_group": "USER",
                  "dim": 4,
                  "dtype": "mio_int16",
                  "input_name": "user_profile_emb",
                  "slots": "101 102",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "input_name": "personalized_id_emb",
                  "slots": "103 104 105 106",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 64,
                  "dtype": "mio_int16",
                  "input_name": "context_emb",
                  "slots": "110 111 113",
                  "tensor_dtype": "float32"
                },
                {
                  "compress_group": "USER",
                  "dim": 4,
                  "dtype": "mio_int16",
                  "input_name": "video_profile_emb",
                  "slots": "112",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 64,
                  "dtype": "mio_int16",
                  "input_name": "c_id_emb",
                  "slots": "201 202",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 32,
                  "dtype": "mio_int16",
                  "input_name": "c_info_emb",
                  "slots": "203 204 205 206 207 209",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 8,
                  "dtype": "mio_int16",
                  "input_name": "c_position_emb",
                  "slots": "208",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 8,
                  "dtype": "mio_int16",
                  "input_name": "c_tag_emb",
                  "slots": "250 254 255",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 12,
                  "dtype": "mio_int16",
                  "input_name": "c_cnt_emb",
                  "slots": "271 272 273 274 275 276 277 286 287 288 289 290 291",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 8,
                  "dtype": "mio_int16",
                  "input_name": "c_mmu_score_emb",
                  "slots": "279",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 8,
                  "dtype": "mio_int16",
                  "input_name": "c_xtr_emb",
                  "slots": "281 282 283 284 285",
                  "tensor_dtype": "float32"
                },
                {
                  "dim": 4,
                  "dtype": "mio_int16",
                  "input_name": "c_binary_tag_emb",
                  "slots": "270 292 293 294 295 296 297 298",
                  "tensor_dtype": "float32"
                }
              ],
              "slots_inputs": [
                "comment_item_slots"
              ],
              "timeout_ms": 50
            }
          ],
          "executor_config": {
            "inter_op_parallelism_threads_num": 32,
            "intra_op_parallelism_threads_num": 32
          },
          "graph": "base64:",
          "inputs": [
            {
              "attr_name": "user_profile_emb",
              "compress_group": "USER",
              "dim": 8,
              "tensor_name": "user_profile_emb"
            },
            {
              "attr_name": "personalized_id_emb",
              "compress_group": "USER",
              "dim": 256,
              "tensor_name": "personalized_id_emb"
            },
            {
              "attr_name": "context_emb",
              "compress_group": "USER",
              "dim": 192,
              "tensor_name": "context_emb"
            },
            {
              "attr_name": "video_profile_emb",
              "compress_group": "USER",
              "dim": 4,
              "tensor_name": "video_profile_emb"
            },
            {
              "attr_name": "c_id_emb",
              "dim": 128,
              "tensor_name": "c_id_emb"
            },
            {
              "attr_name": "c_info_emb",
              "dim": 192,
              "tensor_name": "c_info_emb"
            },
            {
              "attr_name": "c_position_emb",
              "dim": 8,
              "tensor_name": "c_position_emb"
            },
            {
              "attr_name": "c_tag_emb",
              "dim": 24,
              "tensor_name": "c_tag_emb"
            },
            {
              "attr_name": "c_cnt_emb",
              "dim": 156,
              "tensor_name": "c_cnt_emb"
            },
            {
              "attr_name": "c_mmu_score_emb",
              "dim": 8,
              "tensor_name": "c_mmu_score_emb"
            },
            {
              "attr_name": "c_xtr_emb",
              "dim": 40,
              "tensor_name": "c_xtr_emb"
            },
            {
              "attr_name": "c_binary_tag_emb",
              "dim": 32,
              "tensor_name": "c_binary_tag_emb"
            },
            {
              "attr_name": "final_seg_num",
              "common": false,
              "dim": 1,
              "tensor_name": "final_seg_num"
            },
            {
              "attr_name": "mask_pack",
              "common": false,
              "dim": 15,
              "tensor_name": "mask_pack"
            }
          ],
          "key": "comment_model_add_feature_wht",
          "model_loader_config": {
            "executor_batchsizes": [
              512,
              1024,
              2048,
              4096
            ],
            "implicit_batch": true,
            "receive_dnn_model_as_macro_block": true,
            "rowmajor": true,
            "type": "MioTFExecutedByTensorFlowModelLoader"
          },
          "outputs": [
            {
              "attr_name": "expand_xtr",
              "common": false,
              "tensor_name": "main_model/expand/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "like_xtr",
              "common": false,
              "tensor_name": "main_model/like/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "reply_xtr",
              "common": false,
              "tensor_name": "main_model/reply/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "copy_xtr",
              "common": false,
              "tensor_name": "main_model/copy/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "share_xtr",
              "common": false,
              "tensor_name": "main_model/share/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "audience_xtr",
              "common": false,
              "tensor_name": "main_model/audience/dense_2/Sigmoid:0"
            },
            {
              "attr_name": "continuous_expand_xtr",
              "common": false,
              "tensor_name": "main_model/continuous_expand/dense_2/Sigmoid:0"
            }
          ],
          "param": [
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/explicit_cross_layer_0/dense/kernel",
              "rown": 1048,
              "scale_by_rown": true
            },
            {
              "coln": 1048,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/explicit_cross_layer_0/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/explicit_cross_layer_0/dense_1/bias",
              "rank": 1,
              "rown": 1048,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/explicit_cross_layer_1/dense/kernel",
              "rown": 1048,
              "scale_by_rown": true
            },
            {
              "coln": 1048,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/explicit_cross_layer_1/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/explicit_cross_layer_1/dense_1/bias",
              "rank": 1,
              "rown": 1048,
              "scale_by_rown": true
            },
            {
              "coln": 512,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/dense/kernel",
              "rown": 1048,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/dense/bias",
              "rank": 1,
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/expand/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/expand/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/expand/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/expand/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/expand/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/expand/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/like/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/like/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/like/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/like/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/like/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/like/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/reply/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/reply/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/reply/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/reply/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/reply/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/reply/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/copy/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/copy/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/copy/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/copy/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/copy/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/copy/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/share/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/share/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/share/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/share/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/share/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/share/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/audience/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/audience/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/audience/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/audience/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/audience/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/audience/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            },
            {
              "coln": 128,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/continuous_expand/dense/kernel",
              "rown": 512,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/continuous_expand/dense/bias",
              "rank": 1,
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 64,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/continuous_expand/dense_1/kernel",
              "rown": 128,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/continuous_expand/dense_1/bias",
              "rank": 1,
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 1,
              "name": "main_model/continuous_expand/dense_2/kernel",
              "rown": 64,
              "scale_by_rown": true
            },
            {
              "coln": 1,
              "dtype": "float32",
              "init_mean": 0,
              "init_range": 0,
              "name": "main_model/continuous_expand/dense_2/bias",
              "rank": 1,
              "rown": 1,
              "scale_by_rown": true
            }
          ],
          "queue_prefix": "comment_model_add_feature_wht",
          "type_name": "UniPredictFusedItemAttrEnricher"
        }
      },
      "type_name": "CommonRecoPipeline"
    },
    "pipeline_map": {
      "comment_new_label": {
        "__PARENT": "base_pipeline",
        "pipeline": [
          "deduplicate_BBE8FF",
          "count_reco_result_A90E0C",
          "_branch_controller_F39EF552",
          "return__28C561",
          "copy_user_meta_info_17EC10",
          "copy_item_meta_info_6E522F",
          "set_attr_value_C82E6E",
          "get_common_attr_from_redis_7B2CD9",
          "_branch_controller_B29C42BE",
          "split_string_B8ECA2",
          "enrich_attr_by_lua_4AC68B",
          "enrich_attr_by_lua_BC689D",
          "enrich_attr_by_lua_E26C22",
          "enrich_attr_by_lua_A9749E",
          "set_attr_value_AE743F",
          "extract_kuiba_parameter_CC24E3",
          "extract_kuiba_parameter_4E0719",
          "uni_predict_fused_E101D8"
        ]
      }
    }
  },
  "request_type_config": {
    "hot_comment_default": [
      "comment_new_label"
    ]
  },
  "return_item_attrs": [
    "audience_xtr",
    "continuous_expand_xtr",
    "copy_xtr",
    "expand_xtr",
    "like_xtr",
    "reply_xtr",
    "share_xtr"
  ]
}